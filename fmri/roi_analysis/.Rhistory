control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
#summary
summ(m1, exp = TRUE, confint = TRUE, digits = 4)
#plot coefficients
plot_summs(m1, plot.distributions = TRUE)+th+
theme(plot.margin=unit(c(25.5, 25.5, 25.5, 25.5),"points"))
m1_demo <- glmer(vote ~ scale(fairness_p_diff) +scale(care_p_diff) + scale(loyalty_p_diff) +
scale(authority_p_diff) + scale(sanctity_p_diff) +
factor(gender) + factor(race) + factor(nomrelig) + factor(parnom) + scale(ideo) +
scale(age) +(1 | justice),
data = data_clean, family = binomial(link = "logit"),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
data <- within(data, {
vote <- factor(vote,levels = 0:1,labels = c("respondent", "petitioner"))
win_side <- factor(win_side,levels = 0:1,labels = c("respondent", "petitioner"))
justice <- factor(justice)
})
#get case year
data<- data %>%
separate(case_id, into = c("year", "docket_num"), sep="_(?=[^_]+$)")
data <- read.csv(file="./long_data_w_justice_info.csv",header=TRUE,
sep = ",",na.strings=c("","NA"))
data <- within(data, {
vote <- factor(vote,levels = 0:1,labels = c("respondent", "petitioner"))
win_side <- factor(win_side,levels = 0:1,labels = c("respondent", "petitioner"))
justice <- factor(justice)
})
#get case year
data<- data %>%
separate(case_id, into = c("year", "docket_num"), sep="_(?=[^_]+$)")
#justice age
data$year<- strtoi(data_clean$year)
data <- read.csv(file="./long_data_w_justice_info.csv",header=TRUE,
sep = ",",na.strings=c("","NA"))
data <- within(data, {
vote <- factor(vote,levels = 0:1,labels = c("respondent", "petitioner"))
win_side <- factor(win_side,levels = 0:1,labels = c("respondent", "petitioner"))
justice <- factor(justice)
})
#get case year
data<- data %>%
separate(case_id, into = c("year", "docket_num"), sep="_(?=[^_]+$)")
#justice age
data$year<- strtoi(data$year)
data$age <- data$year - data$biryear
#filter out NAs
data_clean <- data[ which( data$vote != 'NA') , ]
#drop justices without a vote
#data_clean <- data_clean[ which( data_clean$vote != 'NA') , ]
data_clean$
*
m1 <- glmer(vote ~ scale(fairness_p_diff) + scale(care_p_diff) + scale(loyalty_p_diff) +
scale(authority_p_diff) + scale(sanctity_p_diff) + (1 | justice),
data = data_clean, family = binomial(link = "logit"),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
m1_demo <- glmer(vote ~ scale(fairness_p_diff) +scale(care_p_diff) + scale(loyalty_p_diff) +
scale(authority_p_diff) + scale(sanctity_p_diff) +
factor(gender) + factor(race) + factor(nomrelig) + factor(parnom) + scale(ideo) +
scale(age) +(1 | justice),
data = data_clean, family = binomial(link = "logit"),
control=glmerControl(optimizer="bobyqa",optCtrl=list(maxfun=2e5)))
#plot coefficients
plot_summs(m1, m1_demo)+th+
theme(plot.margin=unit(c(25.5, 25.5, 25.5, 25.5),"points"))
#plot coefficients
plot_summs(m1, plot.distributions = TRUE)+th+
theme(plot.margin=unit(c(25.5, 25.5, 25.5, 25.5),"points"))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(reshape)
library(formattable)
library(arm)
library(lme4)
library(optimx)
library(jtools)
library(interactions)
library(ggplot2)
library(ggpubr)
th <- theme_minimal() +
theme(plot.background = element_rect(fill = 'white', color = 'white'),
plot.title = element_text(face = 'bold', colour = 'black', size = 18),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'white',color = 'white'),
axis.line = element_line(colour = "black"),
axis.title.x = element_text(colour = "black", size = 16),
axis.title.y = element_text(colour = "black", size = 16),
axis.text=element_text(size = 16),
axis.text.x = element_text(colour = "black", size = 16),
axis.text.y = element_text(colour = "black", size = 16))
data <- read.csv(file="./final_merged_data_all_norm.csv",
header=TRUE,
sep = ",",
na.strings=c("","NA")
)
demo <- read.csv(file="./demographics.csv",
header=TRUE,
sep = ",",
na.strings=c("","NA")
)
recode_if <- function(x, condition, ...) {
if_else(condition, recode(x, ...), x)
}
data2 <- data %>%
recode_if(phase, phase == "int" & subj_day_num = NA)
data2 <- data %>%
recode_if(phase, phase == "int" & subj_day_num == NA)
data <- within(data, {
msg_start <- factor(msg_start)
phase <- factor(msg_start,
levels = 0:1,
labels = c("pre", "int")
)
sub <- factor(sub)
})
data2 <- data %>%
recode_if(phase, phase == "int" & subj_day_num == NA)
View(data)
data2 <- data %>%
recode_if(phase, phase == "int" & is.na(subj_day_num))
View(data)
data2 <- data %>%
recode_if(phase, msg_start = 1  & is.na(subj_day_num), NA = "post")
data2 <- data %>%
recode_if(phase, msg_start = 1  & is.na(subj_day_num), NA = "post")
data2 <- data %>%
recode_if(phase, msg_start = 1  & is.na(subj_day_num), "post")
data <- data %>%
recode_if(phase, msg_start = 1  & is.na(subj_day_num), "post")
data2 <- data %>%
mutate(phase = case_when(
phase == 'pre' ~ "pre",
phase == 'int' & !is.na(subj_day_num) ~ "int",
phase == 'int' & is.na(subj_day_num) ~ "post"
))
View(data2)
data <- read.csv(file="./final_merged_data_all_norm.csv",
header=TRUE,
sep = ",",
na.strings=c("","NA")
)
demo <- read.csv(file="./demographics.csv",
header=TRUE,
sep = ",",
na.strings=c("","NA")
)
data <- read.csv(file="./final_merged_data_all_norm.csv",
header=TRUE,
sep = ",",
na.strings=c("","NA")
)
demo <- read.csv(file="./demographics.csv",
header=TRUE,
sep = ",",
na.strings=c("","NA")
)
data <- within(data, {
msg_start <- factor(msg_start)
phase <- factor(msg_start,
levels = 0:1,
labels = c("pre", "int")
)
sub <- factor(sub)
})
#add a level to the pre/int phase column so we have post
#post exists IF there is no sub day num AND int = TRUE
data <- data %>%
mutate(phase = case_when(
phase == 'pre' ~ "pre",
phase == 'int' & !is.na(subj_day_num) ~ "int",
phase == 'int' & is.na(subj_day_num) ~ "post"
))
#get the pre-intervention steps
pre_steps <- data %>%
group_by(sub) %>%
filter(phase == 'pre' & TotalSteps != 0) %>%
mutate(meanTotalSteps_Pre = mean(TotalSteps),
meanHR_pre = mean(RestingHeartRate)) %>%
distinct(sub, meanTotalSteps_Pre, .keep_all = TRUE)
pre_steps<-pre_steps %>%
dplyr::select(c(sub, meanTotalSteps_Pre, meanHR_pre))
#merge it back with the dataframe
#first drop rows with zero steps
data <- data[ which( data$TotalSteps != 0) , ]
pre_post_data <- merge(data,pre_steps,by=c('sub'))
#filter out extra rows related to fMRI
pre_post_data <- pre_post_data %>%
filter(trial_type =='rating')
#calculate percent change
##steps
pre_post_data$TotalSteps_pct_chng <- ((pre_post_data$TotalSteps - pre_post_data$meanTotalSteps_Pre)/(pre_post_data$meanTotalSteps_Pre))*100
##HR
pre_post_data$RestingHeartRate_pct_chng <- ((pre_post_data$RestingHeartRate - pre_post_data$meanHR_pre)/(pre_post_data$meanHR_pre))*100
pre_post_data <- pre_post_data %>%
filter(phase =='int')
ggplot(data, aes(x=TotalSteps)) + geom_histogram(color="black", fill='white') +
th + geom_vline(aes(xintercept=mean(TotalSteps)),
color="blue", linetype="dashed", size=1)
ggplot(pre_post_data, aes(x=TotalSteps_pct_chng)) + geom_histogram(color="black", fill='white') +
th + geom_vline(aes(xintercept=mean(TotalSteps_pct_chng)),
color="blue", linetype="dashed", size=1)
#drop outliers in steps change
#filter out extra rows related to fMRI
pre_post_data <- pre_post_data %>%
filter(abs(TotalSteps_pct_chng) < 101)
#dropped step change that doubled/halved
ggplot(pre_post_data, aes(x=TotalSteps_pct_chng)) + geom_histogram(color="black", fill='white') +
th + geom_vline(aes(xintercept=mean(TotalSteps_pct_chng)),
color="blue", linetype="dashed", size=1)
ggplot(data, aes(x=RestingHeartRate)) + geom_histogram(color="black", fill='white') +
th + geom_vline(aes(xintercept=mean(RestingHeartRate)),
color="blue", linetype="dashed", size=1)
ggplot(pre_post_data, aes(x=RestingHeartRate_pct_chng)) + geom_histogram(color="black", fill='white') + th + geom_vline(aes(xintercept=mean(RestingHeartRate_pct_chng)),
color="blue", linetype="dashed", size=1)
msg_type_norm <- lmer(TotalSteps_norm ~ s_ns*valence + ( 1| sub), data=pre_post_data)
summ(msg_type_norm)
msg_type <- lmer(TotalSteps_pct_chng ~ s_ns*valence + ( 1| sub), data=pre_post_data)
summ(msg_type)
interact_plot(msg_type, pred = 's_ns',modx = 'valence',
x.label = "Social/Non-Social",
main.title = " ",
legend.main="Valence",
y.label = "%Change in Total Daily Steps",
colors = cols) +
th
cat_plot(msg_type, pred = 's_ns',modx = 'valence',
x.label = "Social/Non-Social",
main.title = " ",
legend.main="Valence",
y.label = "%Change in Total Daily Steps",
colors = cols) +
th
cols <- c("#76c8ff","#0099ff","#005289")
cat_plot(msg_type, pred = 's_ns',modx = 'valence',
x.label = "Social/Non-Social",
main.title = " ",
legend.main="Valence",
y.label = "%Change in Total Daily Steps",
colors = cols) +
th
cat_plot(msg_type_norm, pred = 's_ns',modx = 'valence',
x.label = "Social/Non-Social",
main.title = " ",
legend.main="Valence",
y.label = "%Change in Total Daily Steps",
colors = cols) +
th
cat_plot(msg_type_norm, pred = 's_ns',modx = 'valence',
x.label = "Social/Non-Social",
main.title = " ",
legend.main="Valence",
y.label = "Total Daily Steps (Z)",
colors = cols) +
th
msg_type_raw <- lmer(TotalSteps_raw ~ s_ns*valence + ( 1| sub), data=pre_post_data)
summ(msg_type_raw)
msg_type_raw <- lmer(TotalSteps ~ s_ns*valence + ( 1| sub), data=pre_post_data)
summ(msg_type_raw)
cat_plot(msg_type_raw, pred = 's_ns',modx = 'valence',
x.label = "Social/Non-Social",
main.title = " ",
legend.main="Valence",
y.label = "Total Daily Steps",
colors = cols) +
th
plot(pre_post_data$subj_day_num,pre_post_data$TotalSteps_norm)
plot(pre_post_data$subj_day_num,pre_post_data$TotalSteps)
ggscatter(pre_post_data,x=subj_day_num,y=TotalSteps,point = FALSE,cor.coef = TRUE)
ggscatter(pre_post_data,x=subj_day_num,y=TotalSteps,point = FALSE,cor.coef = TRUE)
ggscatter(pre_post_data,x=subj_day_num,y=TotalSteps)
pre_post_data$subj_day_num
ggscatter(pre_post_data,x="subj_day_num",y="TotalSteps",point = FALSE,cor.coef = TRUE)
ggscatter(pre_post_data,x="subj_day_num",y="TotalSteps",cor.coef = TRUE)
ggscatter(pre_post_data,x="subj_day_num",y="TotalSteps",point = FALSE,cor.coef = TRUE, add = "reg.line")
ggscatter(pre_post_data,x="subj_day_num",y="TotalSteps",point = FALSE,cor.coef = TRUE, add = "reg.line", conf.int = TRUE)
ggscatter(pre_post_data,x="subj_day_num",y="TotalSteps_norm",point = FALSE,cor.coef = TRUE, add = "reg.line", conf.int = TRUE)
ggscatter(pre_post_data,x="subj_day_num",y="TotalSteps_pct_chng",point = FALSE,cor.coef = TRUE, add = "reg.line", conf.int = TRUE)
msg_rating <- lmer(TotalSteps_pct_chng ~ rating + ( 1| sub), data=pre_post_data)
summ(msg_rating)
msg_rating_norm <- lmer(TotalSteps_norm ~ rating + ( 1| sub), data=pre_post_data)
summ(msg_rating_norm)
msg_rating_raw <- lmer(TotalSteps ~ rating + ( 1| sub), data=pre_post_data)
summ(msg_rating_raw)
ggscatter(pre_post_data,x="rating",y="TotalSteps_pct_chng",point = FALSE,cor.coef = TRUE, add = "reg.line", conf.int = TRUE)
ggscatter(pre_post_data,x="rating",y="TotalSteps_norm",point = FALSE,cor.coef = TRUE, add = "reg.line", conf.int = TRUE)
ggscatter(pre_post_data,x="rating",y="TotalSteps",point = FALSE,cor.coef = TRUE, add = "reg.line", conf.int = TRUE)
ggscatter(pre_post_data,x="rating",y="TotalSteps",point = FALSE,cor.coef = TRUE, add = "reg.line", conf.int = TRUE)+ylim(0,15000)
ggscatter(pre_post_data,x="rating",y="TotalSteps",point = FALSE,cor.coef = TRUE, add = "reg.line", conf.int = TRUE)+ylim(5000,15000)
ggscatter(pre_post_data,x="rating",y="TotalSteps",point = FALSE,cor.coef = TRUE, add = "reg.line", conf.int = TRUE)+ylim(8000,12000)
library("rtweet")
get_token()
mn_tweets<-search_tweets(q = "minnesota", n = 2, lang = "en", include_rts = FALSE)
View(mn_tweets)
mn$text
mn_tweets$text
th_tweets<-search_tweets(q = "TomHolland1996", n = 2, lang = "en", include_rts = FALSE)
View(th_tweets)
th_follow<- get_followers(user = "TomHolland1996", n=4)
View(th_follow)
setwd("~/Desktop/juror_fmri_bias/fmri/roi_analysis")
#packages
library(dplyr)
library(lme4)
library(jtools)
library(ggplot2)
library(lmerTest)
library(magick)
library(gridBase)
library(sjPlot)
library(ggpubr)
#set seed (for reproducible effects)
set.seed(1000)
#theme
th <- theme_minimal() +
theme(plot.background = element_rect(fill = 'white', color = 'white'),
plot.title = element_text(face = 'bold', colour = 'black', size = 18),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'white',color = 'white'),
axis.line = element_line(colour = "black"),
axis.title.x = element_text(colour = "black", size = 16),
axis.title.y = element_text(colour = "black", size = 16),
axis.text=element_text(size = 16),
axis.text.x = element_text(colour = "black", size = 16),
axis.text.y = element_text(colour = "black", size = 16))
#open fmri parameter estimates data
data <- read.csv(file="./subject_scenario_mean_zstat.csv",
header=TRUE,
sep = ",",
na.strings=c("","NA"))
data <- within(data, {
victim_type <- factor(victim_type,
levels = 0:2,
labels = c('Victimless',
'Loss of Property',
'Injury or Loss of Life'))
subjectID <- factor(subjectID)
})
# grab behavior data
behavior <- read.csv(file="../../behavior/data/scenario_classification.csv",
header=TRUE,
sep = ",",
na.strings=c("","NA"))
behavior <- within(behavior, {
victim_type <- factor(JRL,
levels = 0:2,
labels = c('Victimless',
'Loss of Property',
'Injury or Loss of Life'))
category <- factor(category)
})
#grab pca data
pca <- read.csv(file="../../behavior/pca_loadings-fmri.csv",
header=TRUE,
sep = ",",
na.strings=c("","NA"))
pca <- within(pca, {
scenario <- factor(X)
})
#merge dataframes
behavior_data <- merge(behavior, pca, by='scenario')
#m0
m0_behavior <- lm(PC1 ~ 1, data = behavior_data)
summ(m0_behavior, scale = TRUE, confint = TRUE, digits = 4)
anova(m0_behavior)
#m1
m1_behavior <- lm(PC1 ~ factor(victim_type), data = behavior_data)
summ(m1_behavior, scale = TRUE, confint = TRUE, digits = 4)
anova(m1_behavior)
#m2
m2_behavior <- lm(PC1 ~ factor(category), data = behavior_data)
summ(m2_behavior, scale = TRUE, confint = TRUE, digits = 4)
anova(m2_behavior)
#m3
m3_behavior <- lm(PC1 ~ factor(victim_type) + factor(category), data = behavior_data)
summ(m3_behavior, scale = TRUE, confint = TRUE, digits = 4)
anova(m3_behavior)
#m4
m4_behavior <- lm(PC1 ~ factor(victim_type)*factor(category), data = behavior_data)
summ(m4_behavior, scale = TRUE, confint = TRUE, digits = 4)
anova(m4_behavior)
# MODEL COMPARISON/SELECTION #changed order of 1 & 2 to facilitate d.f. interpretation in output
behavior_crime_type_model_comparison <- anova(m0_behavior,m2_behavior,
m1_behavior,m3_behavior,
m4_behavior,test="Chisq")
behavior_crime_type_model_comparison
library(lmtest)
lmtest::lrtest(m0_behavior,m2_behavior,m1_behavior,m3_behavior,m4_behavior)
anova(m0_behavior,m2_behavior,
m1_behavior,m3_behavior,
m4_behavior,test="LRT")
setwd("~/Desktop/juror_fmri/behavior/docs")
knitr::opts_chunk$set(fig.pos= "H", out.extra='')
library(jsonlite)
sc <- fromJSON('../data/scenarios.json', flatten=TRUE)
template <- "### Scenario %s:
%s
- **Criminal History**
- *Related*:   %s
- *Unrelated*: %s
- *No prior*:  %s
- **Witness**
- *Witness*:   %s
- *No witness*: %s
- **Physical evidence**
- *DNA*:   %s
- *non-DNA*: %s
- *none*:  %s
"
sc_formatted <- sprintf(template, sc$abbr,
sc[['vars.base.Base']],
sc[['vars.Criminal History.relatedPrior']],
sc[['vars.Criminal History.unrelatedPrior']],
sc[['vars.Criminal History.noPrior']],
sc[['vars.Witness.isWitness']],
sc[['vars.Witness.noWitness']],
sc[['vars.Physical Evidence.DNA']],
sc[['vars.Physical Evidence.nonDNA']],
sc[['vars.Physical Evidence.noPhys']]
)
cat(sc_formatted, sep='')
install.packages('tinytex')
tinytex::install_tinytex()
install.packages('tinytex')
tinytex::install_tinytex()
capabilities()
setwd("~/Desktop/juror_fmri_bias/fmri/roi_analysis")
#packages
library(dplyr)
library(lme4)
library(jtools)
library(ggplot2)
library(lmerTest)
library(magick)
library(gridBase)
library(sjPlot)
library(ggpubr)
#set seed (for reproducible effects)
set.seed(1000)
#theme
th <- theme_minimal() +
theme(plot.background = element_rect(fill = 'white', color = 'white'),
plot.title = element_text(face = 'bold', colour = 'black', size = 18),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = 'white',color = 'white'),
axis.line = element_line(colour = "black"),
axis.title.x = element_text(colour = "black", size = 16),
axis.title.y = element_text(colour = "black", size = 16),
axis.text=element_text(size = 16),
axis.text.x = element_text(colour = "black", size = 16),
axis.text.y = element_text(colour = "black", size = 16))
#open fmri parameter estimates data
data <- read.csv(file="./subject_scenario_mean_zstat.csv",
header=TRUE,
sep = ",",
na.strings=c("","NA"))
data <- within(data, {
victim_type <- factor(victim_type,
levels = 0:2,
labels = c('Victimless',
'Loss of Property',
'Injury or Loss of Life'))
subjectID <- factor(subjectID)
})
# grab behavior data
behavior <- read.csv(file="../../behavior/data/scenario_classification.csv",
header=TRUE,
sep = ",",
na.strings=c("","NA"))
behavior <- within(behavior, {
victim_type <- factor(JRL,
levels = 0:2,
labels = c('Victimless',
'Loss of Property',
'Injury or Loss of Life'))
category <- factor(category)
})
#grab pca data
pca <- read.csv(file="../../behavior/pca_loadings-fmri.csv",
header=TRUE,
sep = ",",
na.strings=c("","NA"))
pca <- within(pca, {
scenario <- factor(X)
})
#merge dataframes
behavior_data <- merge(behavior, pca, by='scenario')
#m0
m0_behavior <- lm(PC1 ~ 1, data = behavior_data)
summ(m0_behavior, scale = TRUE, confint = TRUE, digits = 4)
anova(m0_behavior)
#m1
m1_behavior <- lm(PC1 ~ factor(victim_type), data = behavior_data)
summ(m1_behavior, scale = TRUE, confint = TRUE, digits = 4)
anova(m1_behavior)
#m2
m2_behavior <- lm(PC1 ~ factor(category), data = behavior_data)
summ(m2_behavior, scale = TRUE, confint = TRUE, digits = 4)
anova(m2_behavior)
#m3
m3_behavior <- lm(PC1 ~ factor(victim_type) + factor(category), data = behavior_data)
summ(m3_behavior, scale = TRUE, confint = TRUE, digits = 4)
anova(m3_behavior)
#m4
m4_behavior <- lm(PC1 ~ factor(victim_type)*factor(category), data = behavior_data)
summ(m4_behavior, scale = TRUE, confint = TRUE, digits = 4)
anova(m4_behavior)
library(lmtest)
lmtest::lrtest(,m1_behavior,m3_behavior)
library(lmtest)
lmtest::lrtest(m1_behavior,m3_behavior)
